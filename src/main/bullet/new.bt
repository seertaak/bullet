var macro 
  tfm (name args body)
    qquote: var ,name (tfm ,args ,body)

macro if (condition truExpr falsExpr)
  qquote
    cond
      ,condition ; ,truExpr
      true         ,falsExpr

macro when (condition truExpr)
  qquote
    cond
      ,condition ; begin
        ,truExpr 
        null
      true         null

macro inc (variable): 
  qquote: set ,variable: + 1 ,variable

macro func (name args :rest exprs)
  qquote
    var ,name
      fn ,args: ,@exprs

print "Func: " func

func double (x)
  print "Not double: " x
  * x 2

print "Double: " double

print "Double of 10: " : double 10

import java.util.ArrayList

var ls: new ArrayList

ls add "martin"
ls add "jojo"

for (var i 0; < i: ls size; inc i)
  print: ls get i

