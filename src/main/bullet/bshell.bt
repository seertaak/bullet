// The bullet way of making a shell!

// want to be able to type:

//include bush
//
//exec
  ////path.ls "-lh" "-
//
//pipe: path.cat ${file} ; path.sort "-n" ; filter (line)
  //when (> line.length 0)
    //print "RESULT: " line
//
//pipe
  //path.ls -lh ${main.args.0}
  //filter (line)
    //when (line startsWith "log")
      //print: line split " " . 4 // the file length length!
  //path.sort

import com.google.common.base.Joiner
import java.lang.ProcessBuilder
import java.io.InputStreamReader
import java.io.BufferedReader

module bush
  func parseCmd (pa)
    flatten pa | map (fn (x): if (is-a Symbol x) x.get x.toString) 
               | str.joinOn "."

  macro run (:rest cmds)
    foreach cmd cmds
      print "cmd:" cmd
      print "pcmd:": map parseCmd cmd
      set pb: new ProcessBuilder 
        map parseCmd cmd
      set rdr
        new BufferedReader 
          new InputStreamReader pb.start.getInputStream
      while (not: == null: set line rdr.readLine)
        print line

  macro collect (:rest cmds)
    set r: alist
    foreach cmd cmds
      set pb: new ProcessBuilder 
        map parseCmd cmd
      set rdr
        new BufferedReader 
          new InputStreamReader pb.start.getInputStream
      while (not: == null: set line rdr.readLine)
        r add line
    r

print: System.getenv get "PATH"

set x: "invoke.bt"

bush.run: ls -lh 

